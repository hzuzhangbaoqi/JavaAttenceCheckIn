<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.attencecheckin.javabackend.dao.LeaveApprovalMapper" >
  <resultMap id="BaseResultMap" type="com.attencecheckin.javabackend.entity.LeaveApproval" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentId" property="studentid" jdbcType="INTEGER" />
    <result column="leaveReason" property="leavereason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="courseId" property="courseid" jdbcType="INTEGER" />
    <result column="leaveSubTime" property="leavesubtime" jdbcType="TIMESTAMP" />
    <result column="approvalTime" property="approvaltime" jdbcType="TIMESTAMP" />
    <result column="leavedate" property="leavedate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, studentId, leaveReason, status, courseId, leaveSubTime, approvalTime, leavedate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.attencecheckin.javabackend.entity.LeaveApprovalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from leaveapproval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from leaveapproval
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from leaveapproval
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.attencecheckin.javabackend.entity.LeaveApprovalExample" >
    delete from leaveapproval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.attencecheckin.javabackend.entity.LeaveApproval" >
    insert into leaveapproval (id, studentId, leaveReason,
      status, courseId, leaveSubTime,
      approvalTime, leavedate)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{leavereason,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{leavesubtime,jdbcType=TIMESTAMP},
      #{approvaltime,jdbcType=TIMESTAMP}, #{leavedate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.attencecheckin.javabackend.entity.LeaveApproval" >
    insert into leaveapproval
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentId,
      </if>
      <if test="leavereason != null" >
        leaveReason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="courseid != null" >
        courseId,
      </if>
      <if test="leavesubtime != null" >
        leaveSubTime,
      </if>
      <if test="approvaltime != null" >
        approvalTime,
      </if>
      <if test="leavedate != null" >
        leavedate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="leavereason != null" >
        #{leavereason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="leavesubtime != null" >
        #{leavesubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvaltime != null" >
        #{approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="leavedate != null" >
        #{leavedate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.attencecheckin.javabackend.entity.LeaveApprovalExample" resultType="java.lang.Integer" >
    select count(*) from leaveapproval
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update leaveapproval
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null" >
        studentId = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.leavereason != null" >
        leaveReason = #{record.leavereason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null" >
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.leavesubtime != null" >
        leaveSubTime = #{record.leavesubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvaltime != null" >
        approvalTime = #{record.approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leavedate != null" >
        leavedate = #{record.leavedate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update leaveapproval
    set id = #{record.id,jdbcType=INTEGER},
    studentId = #{record.studentid,jdbcType=INTEGER},
    leaveReason = #{record.leavereason,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=INTEGER},
    courseId = #{record.courseid,jdbcType=INTEGER},
    leaveSubTime = #{record.leavesubtime,jdbcType=TIMESTAMP},
    approvalTime = #{record.approvaltime,jdbcType=TIMESTAMP},
    leavedate = #{record.leavedate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.attencecheckin.javabackend.entity.LeaveApproval" >
    update leaveapproval
    <set >
      <if test="studentid != null" >
        studentId = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="leavereason != null" >
        leaveReason = #{leavereason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="leavesubtime != null" >
        leaveSubTime = #{leavesubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvaltime != null" >
        approvalTime = #{approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="leavedate != null" >
        leavedate = #{leavedate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.attencecheckin.javabackend.entity.LeaveApproval" >
    update leaveapproval
    set studentId = #{studentid,jdbcType=INTEGER},
      leaveReason = #{leavereason,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      leaveSubTime = #{leavesubtime,jdbcType=TIMESTAMP},
      approvalTime = #{approvaltime,jdbcType=TIMESTAMP},
      leavedate = #{leavedate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="showleaveCourseByTeacherid" resultType="map">
    select s.username,l.*,c.courseName,c.week,c.jieci from course c,leaveapproval l,student s where c.id = l.courseId and l.studentId=s.id
    <if test="teacherid!=null">
      and c.teacherid = #{teacherid}
    </if>
  </select>

  <select id="getCourseByStudent" resultType="map">
    select l.*,DATE_FORMAT(c.courseStartTime,'%T') courseStart,DATE_FORMAT(c.courseEndTime,'%T') courseEnd ,concat('第',c.jieci,'节次：',c.courseName) as 'name'from leaveapproval l,course c where c.id = l.courseId
    and studentid = #{studentid}
    <if  test="statusList!=null and statusList.size()>0" >
      and status in
      <foreach collection="statusList" item="status" open="(" close=")" separator="," >
        #{status}
      </foreach>
    </if>
  </select>
</mapper>